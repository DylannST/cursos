-call Stack--pila de tareas(funciones)
-stack overflow mas tareas de las que soporta osea
se desborda
-engine--- interprete de java
-memory heap--- variables y valores guardados en memoria
-runtime---tiempo de corrido del programa

-----asincronismo o asincronia---que hace una cosa a las vez tarea por tarea
-Dom--todo el documento en html  para que sea interactivo define la estructura del documento html
-ajax---javaScript asincrono y xml(hmtl,dom,javaScript,xmlhttprequest)
-xmlhttpsrequest--permite el intercambio asincrono entre el cliente y el servidor
-eventloop--observadoor para saber si el call stack esta vacio
-Callback queue--bandeja de espera como una fila en donde estan las tareas en su turno por decirlo así para pasar al callStack
-setTimeout(()=>{},tiempoDeRespuestaEnMiliSegundos)--->metodo que queda a cargo del navegador, y no de javaScript (adentro va un arrow function)
al setTimeout se le masnda la funcion que quieres que haga el navegador, la función que hace el navegador la hace en paralelo con JavaScript
si eltimepoensegundos es 0 significa que el navegador lo hace mas rapido pero aun asi tiene que esperar a que JavaSript lo termine
-arrow function o funciones anonimas ()=>{} es igual a function(){} ejm: (a,b)=> a+b es igual a function(a,b){return a+b}
-hoisting---que hay un orden de ejecucion
-stack overflow -----cuando el navegador se crashea
